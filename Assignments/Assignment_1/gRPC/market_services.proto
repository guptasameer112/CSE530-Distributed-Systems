syntax = "proto3";

enum Category {
    ANY = 0;
    ELECTRONICS = 1;
    FASHION = 2;
    OTHERS = 3;
}

message SellerRegistrationRequest {
    string address = 1; // ip:port
    string uuid = 2;
}

message SellItemRequest {
    string product_name = 1;
    Category category = 2;
    int32 quantity = 3;
    string description = 4;
    double price = 5;
    string seller_address = 6;
    string seller_uuid = 7;
}

message SellItemResponse {
    string message = 1;
    string item_id = 2;
}

message UpdateItemRequest {
    string item_id = 1;
    double new_price = 2;
    int32 new_quantity = 3;
    string seller_address = 4;
    string seller_uuid = 5;
}

message DeleteItemRequest {
    string item_id = 1;
    string seller_address = 2;
    string seller_uuid = 3;
}

message DisplaySellerItemsRequest {
    string seller_address = 1;
    string seller_uuid = 2;
}

message DisplaySellerItemsResponse {
    repeated Item items = 1;
    string message = 2;
}

message SearchItemRequest {
    string product_name = 1;
    Category category = 2;
}

message SearchItemResponse {
    repeated Item items = 1;
}

message BuyItemRequest {
    string item_id = 1;
    int32 quantity = 2;
    string buyer_address = 3;
}

message AddToWishListRequest {
    string item_id = 1;
    string buyer_address = 2;
}

message RateItemRequest {
    string item_id = 1;
    string buyer_address = 2;
    int32 rating = 3;
}

message Item {
    string item_id = 1;
    double price = 2;
    string product_name = 3;
    Category category = 4;
    string description = 5;
    int32 quantity = 6;
    double rating = 7;
    string seller_address = 8;
}

message Notification {
    string message = 1;
}


service Market {
    rpc RegisterSeller(SellerRegistrationRequest) returns (Notification) {}
    rpc SellItem(SellItemRequest) returns (SellItemResponse) {}
    rpc UpdateItem(UpdateItemRequest) returns (Notification) {}
    rpc DeleteItem(DeleteItemRequest) returns (Notification) {}
    rpc DisplaySellerItems(DisplaySellerItemsRequest) returns (stream Item) {}
    rpc SearchItem(SearchItemRequest) returns (stream Item) {}
    rpc BuyItem(BuyItemRequest) returns (Notification) {}
    rpc AddToWishList(AddToWishListRequest) returns (Notification) {}
    rpc RateItem(RateItemRequest) returns (Notification) {}
}

service NotifyClient {
    rpc NotifySeller(Notification) returns (Notification) {}
    rpc NotifyBuyer(Notification) returns (Notification) {}
}
